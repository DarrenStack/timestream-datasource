This sample application is part of the Timestream prerelease documentation. The prerelease documentation is confidential and is provided under the terms of your nondisclosure agreement with Amazon Web Services (AWS) or other agreement governing your receipt of AWS confidential information.


1. Create folder for Timestream go workspace and export the path to the folder as TIMESTREAM_GO_HOME.
export TIMESTREAM_GO_HOME=<path_to_timestream>
2. Unzip the GO SDK into $TIMESTREAM_GO_HOME.
3. Unzip sample_apps.zip into $TIMESTREAM_GO_HOME. 
3. Run the following to replace the AWS GO SDK:
	$ cd $TIMESTREAM_GO_HOME/sample_apps/go_sample
	$ go mod init go_sample
	$ go mod edit -replace github.com/aws/aws-sdk-go=$TIMESTREAM_GO_HOME/github.com/aws/aws-sdk-go
4. Run the command chmod 777 *.sh on the .sh files in go_sample to make them executable files
5. Run the command go run crud-ingestion-sample.go. This will create a Timestream database called devops with a table named host_metrics and inserts 4 records in the table.The table host_metrics contains the cpu utilization and memory utilization of many EC2 instances to address devops use cases. The timestamps for the data points in the table have millisecond granularity. 
6. Run the command go run ingestion-csv-sample.go. This will insert ~125K rows in the table host_metrics. This operation can take a few minutes.
7. Execute the shell file ./devops_init.sh devops host_metrics. This will list the unique hostnames in the table host_metricsand the count of data points for each host. Copy one of the host names from the result.
8. Now run ./devops.sh devops host_metrics <host name copied from above>. This will execute a shell file with 12 sample queries. See query-sample.go for the GO code for parsing query results.
